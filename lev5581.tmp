[gd_scene load_steps=9 format=3 uid="uid://bgt4xny6dwyap"]

[sub_resource type="ProceduralSkyMaterial" id="ProceduralSkyMaterial_bl7s0"]
sky_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)
ground_horizon_color = Color(0.64625, 0.65575, 0.67075, 1)

[sub_resource type="Sky" id="Sky_o3dmt"]
sky_material = SubResource("ProceduralSkyMaterial_bl7s0")

[sub_resource type="Environment" id="Environment_wkp57"]
background_mode = 2
sky = SubResource("Sky_o3dmt")
tonemap_mode = 2
glow_enabled = true

[sub_resource type="BoxMesh" id="BoxMesh_q3x26"]

[sub_resource type="BoxShape3D" id="BoxShape3D_26neo"]
size = Vector3(10, 1, 10)

[sub_resource type="GDScript" id="GDScript_uww0w"]
script/source = "extends CharacterBody3D

@onready var huvud: Node3D = $Huvud

var current_speed = 5.0
var lerp_speed = 10.0
var direction = Vector3.ZERO

const walking_speed = 5.0
const sprinting_speed = 8.0
const crouching_speed = 3.0

const jump_velocity = 4.5

const mouse_sensitivty = 0.2








func _unhandled_input(event):
#Detta är en funktion som gör att när jag trycker \"ESC\" så visar den mitt mus pekare
	if event.is_action_pressed(\"ui_cancel\"):
		Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
#Detta är en funktion som gör att när jag trycker vänster click på musen så låser den in mitt mus in i skärmen
	if event.is_action_pressed(\"left_click\"):
		if Input.get_mouse_mode() == Input.MOUSE_MODE_VISIBLE:
			Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)

#Detta är vår kamera kontroll
func _input(event):
	if event is InputEventMouseMotion:
		rotate_y(deg_to_rad(-event.relative.x * mouse_sensitivty))
		huvud.rotate_x(deg_to_rad(-event.relative.y * mouse_sensitivty))
		huvud.rotation.x = clamp(huvud.rotation.x,deg_to_rad(-90),deg_to_rad(90))


func _physics_process(delta):

	#Detta är vår sprint logik
	if  Input.is_action_pressed(\"sprint\"):
		current_speed = sprinting_speed
	else: 
			current_speed = walking_speed

	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = jump_velocity

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"left\", \"right\", \"up\", \"down\")
	direction = lerp(direction,(transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized(),delta*lerp_speed)
	if direction:
		velocity.x = direction.x * current_speed
		velocity.z = direction.z * current_speed
	else:
		velocity.x = move_toward(velocity.x, 0, current_speed)
		velocity.z = move_toward(velocity.z, 0, current_speed)

	move_and_slide()
"

[sub_resource type="CapsuleMesh" id="CapsuleMesh_7flhe"]

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_j5b8q"]
points = PackedVector3Array(-0.125207, -0.532801, -0.480507, 0.0227831, 0.47607, 0.498884, 0.169713, 0.559144, 0.464172, 0.231051, -0.803591, 0.320455, 0.40741, 0.651043, -0.243523, -0.482789, 0.594843, 0.0822132, -0.362868, -0.682312, 0.289697, 0.469044, -0.654529, -0.0662713, -0.127444, 0.842701, -0.338103, -0.393435, -0.683942, -0.244717, 0.438255, 0.623309, 0.200849, 0.0841477, 0.977454, 0.114795, -0.0682023, -0.976458, -0.12927, 0.20055, -0.563129, -0.451454, -0.185527, 0.595453, -0.453475, -0.273363, 0.592268, 0.407754, -0.00693649, -0.476823, 0.49966, 0.375821, -0.588614, 0.316955, 0.111579, 0.563059, -0.481177, -0.41725, 0.527866, -0.270497, -0.484546, -0.596972, -0.0665097, -0.279747, 0.908561, 0.0533361, -0.250197, -0.880712, 0.205319, 0.263647, -0.902771, -0.127394, 0.293368, 0.871526, -0.157196, 0.373412, -0.526319, -0.328246, 0.499663, 0.476641, -0.00688856, 0.0531056, 0.875001, 0.324703, -0.154543, -0.590854, 0.465879, -0.0972799, -0.782358, -0.398188, -0.387649, -0.498171, 0.31565, -0.30068, -0.587995, -0.388901)

[node name="Enviorment" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_wkp57")

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="."]
transform = Transform3D(-0.866025, -0.433013, 0.25, 0, 0.5, 0.866025, -0.5, 0.75, -0.433013, 0, 0, 0)
shadow_enabled = true

[node name="StaticBody3D" type="StaticBody3D" parent="."]

[node name="MeshInstance3D" type="MeshInstance3D" parent="StaticBody3D"]
transform = Transform3D(10.0896, 0, 0, 0, 1.00896, 0, 0, 0, 10.0896, 0, 0, 0)
mesh = SubResource("BoxMesh_q3x26")

[node name="CollisionShape3D" type="CollisionShape3D" parent="StaticBody3D"]
shape = SubResource("BoxShape3D_26neo")

[node name="CharacterBody3D" type="CharacterBody3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.841765, 0)
script = SubResource("GDScript_uww0w")

[node name="MeshInstance3D" type="MeshInstance3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.812794, 0)
mesh = SubResource("CapsuleMesh_7flhe")
skeleton = NodePath("../Huvud")

[node name="CollisionShape3D" type="CollisionShape3D" parent="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.812794, 0)
shape = SubResource("ConvexPolygonShape3D_j5b8q")

[node name="Huvud" type="Node3D" parent="CharacterBody3D"]

[node name="Camera3D" type="Camera3D" parent="CharacterBody3D/Huvud"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.19872, 0)
